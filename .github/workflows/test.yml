name: test

on:
  push:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:


jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.8.10', '3.9.10', '3.10.2']
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/cache@v2
        id: pip-cache
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py', '**/setup.cfg', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -e .[dev]

      - name: check format
        run: pysen run lint